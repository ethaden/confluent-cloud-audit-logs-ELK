#elastic:
#  apm:
#    active: true
#    serverUrl: "http://fleet-server:8200"
#    secretToken: ${ELASTIC_APM_SECRET_TOKEN}
server.host: "0.0.0.0"
telemetry.enabled: "true"
xpack.fleet.agents.elasticsearch.hosts: ["http://es01:9200"]
elasticsearch.ssl.verificationMode: none
xpack.fleet.packages:
  - name: fleet_server
    version: latest
  - name: system
    version: latest
  - name: elastic_agent
    version: latest
  #- name: apm
  #  version: latest
  - name: docker
    version: latest
xpack.fleet.agentPolicies:
  - name: Fleet-Server-Policy
    id: fleet-server-policy
    namespace: default
    monitoring_enabled: 
      - logs
      - metrics
    package_policies:
      - name: fleet_server-1
        package:
          name: fleet_server
      - name: system-1
        package:
          name: system
      - name: elastic_agent-1
        package:
          name: elastic_agent
      - name: confluent_cloud_audit_log
        package:
          name: kafka_log
        streams:
          data_stream:
            dataset: kafka_log.generic
          hosts:
            - '${CONFLUENT_CLOUD_AUDIT_LOG_HOSTS}'
          topics:
            - '${CONFLUENT_CLOUD_AUDIT_LOG_TOPIC}'
          group_id: '${CONFLUENT_CLOUD_AUDIT_LOG_GROUP_ID}'
          client_id: '${CONFLUENT_CLOUD_AUDIT_LOG_CLIENT_ID}'
          username: '${CONFLUENT_CLOUD_AUDIT_LOG_API_KEY}'
          password: '${CONFLUENT_CLOUD_AUDIT_LOG_API_SECRET}'
          parsers: null
          ssl:
            enabled: false
            certificate: /etc/pki/client/cert.pem
            key: /etc/pki/client/cert.key
          tags:
            - forwarded
          publisher_pipeline.disable_host: true
      #- name: docker-1
      #  package:
      #    name: docker
        # inputs:
        # - type: docker
        #   enabled: true
        #   vars:
